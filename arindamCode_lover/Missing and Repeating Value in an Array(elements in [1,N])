//Find the missing and repeating number 
import java.util.*;
public class MissingAndRepeating{
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int a[]=new int[n];
		for(int i=0;i<n;i++)
		{
			a[i]=sc.nextInt();
		}

		//Approach 1:-- I'm modifying the array.
		//Find missing number
		/*
		int val=0,nextval=0;
		for(int i=0;i<n;i++)
		{
			if(a[i]<=0&&a[i]>n)
					continue;
			val=a[i];
			while(a[val-1]!=val)
			{
				nextval=a[val-1];
				a[val-1]=val;
				val=nextval;
				if(val<0&&val>n)
					continue;
			}
		}
		int m=-1;
		for(int i=0;i<n;i++)
		{
			if(a[i]!=i+1){
				m=(i+1);break;
			}
		}
		if(m==-1)
			m=n+1;
		//Repeating number
		/*for(int i=0;i<n;i++)
		{
			//The array elements are:-- 
			System.out.print(a[i]+" ");
		}*/
       /*
		System.out.println();
		StringBuilder sb=new StringBuilder();
		int f=0;
		for(int i=0;i<n;i++)
		{
			if(a[a[i]%n]>n)
			{
				if(a[a[i]%n]<2*n){
					sb.append(a[i]%n).append(" ");
				
				f=1;
			}
			}
			a[a[i]%n]+=n;
		}
		if(f==0)
			sb.append("-1 ");
		sb.append(m).append(" ");
		System.out.println(sb);
		*/



		//Approach 2: Xor
		int xor=0,x=0,y=0;
		for(int i=0;i<n;i++)
		{
			xor^=a[i];
		}
		for(int i=1;i<=n;i++)
		{
			xor^=i;
		}
		//System.out.println("Xor :- "+xor);
		//Get the rightmost set bit
		int setbit=xor&~(xor-1);
		//System.out.println("Set bit :- "+setbit);
		//Seperate the array into two buckets. Let x be the missing number and y be the repeating number.
		for(int i=0;i<n;i++)
		{
			if((a[i]&setbit)!=0)
			{
				x^=a[i];
			}
			else 
				y^=a[i];
		}
		for(int i=1;i<=n;i++)
		{
			if((i&setbit)!=0)
			{
				x^=i;
			}
			else 
				y^=i;
		}
		System.out.println("Missing Number :- "+x+" 	Repeating Number :- "+y);
 	
	}
}
/*
6
4 4 2 3 5 6
Missing number :- 1
Repeating number :- 4
*/
